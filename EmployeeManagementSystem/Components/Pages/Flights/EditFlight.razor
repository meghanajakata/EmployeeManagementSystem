@page "/flights/{id:int}"
@inject EmployeeManagementSystem.Data.EmployeeManagementSystemContext DB
@inject EmployeeManagementSystem.Repository.IFlightRepository FlightRepository
@inject NavigationManager Navigation


<h3>Edit Flight</h3>


@* <EditForm  Model="@flight" OnValidSubmit=SubmitForm FormName="SubmitForm">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="id">Id</label>
        <input id="id" class="form-control" name="id" value="@flight.Id" readonly />
    </div>
    <div class="form-group">
        <label for="name" >Name</label>
        <InputText id="name" class="form-control" DisplayName="name" @bind-Value="@flight.Name" />
    </div>
    <div class="form-group">
        <label for="price" >Price</label>
        <input id="price" class="form-control" DisplayName="price" @bind-value="@flight.Price" />
    </div>
    <button type="submit" class="btn-primary">Update</button>
</EditForm> *@


<div class="row">
    <div class="col-md-4">
     @*    @if (!string.IsNullOrEmpty(ErrorMessage))
        {
            <div class="alert alert-danger mt-3">
                @ErrorMessage
            </div>
        } *@
        <EditForm method="post" Model="flight" OnValidSubmit="SubmitForm" FormName="edit">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <input type="hidden" name="Id" value="@(flight?.Id)" />.

            <div class="mb-3">
                <label for="name" class="form-label">Name:</label>
                <InputText id="name" @bind-Value="flight.Name" class="form-control" />
                <ValidationMessage For="() => flight.Name" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="salary" class="form-label">Price:</label>
                <InputNumber id="salary" @bind-Value="flight.Price" class="form-control" />
                <ValidationMessage For="() => flight.Price" class="text-danger" />
            </div>
            <button type="submit" class="btn btn-primary">Save</button>
        </EditForm>
    </div>
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    [SupplyParameterFromForm]
    private EmployeeManagementSystem.Data.Flight? flight { get; set; }

    private string ErrorMessage { get; set; }


    protected override void OnInitialized()
    {
        if (Id == 0 && flight == null)
            flight = new EmployeeManagementSystem.Data.Flight();
        flight ??= FlightRepository.GetFlightById(Id);
    }

    public void SubmitForm()
    {
        if(flight.Id != 0)
        {
            FlightRepository.UpdateFlight(flight);
            Navigation.NavigateTo("/flights");
        }
        bool isFlightAdded = FlightRepository.AddFlight(flight);
        if(isFlightAdded)
        {
            Navigation.NavigateTo("/flights");
        }
      
    }
}